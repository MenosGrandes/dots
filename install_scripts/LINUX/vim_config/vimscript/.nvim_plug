"Only for NEOVIM
if( has('win32'))
let plugLocation=expand('$LOCALAPPDATA/nvim/autoload/plug.vim')
echo 'Windows'
elseif  (has('unix'))
let plugLocation=expand('~/.config/nvim/autoload/plug.vim')
echo 'Unix'
    endif
if ! filereadable(expand(plugLocation))
    echo "Downloading junegunn/vim-plug to manage plugins..."
    let plugDir = trim(plugLocation,'/plug.vim')
    echo plugDir
    call mkdir(plugDir, "p")
    execute '!curl -fLo ' . plugLocation .' --create-dir https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim '
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
    syntax on
    call plug#begin('~/.vim/plugged')
    Plug 'dracula/vim'
    Plug 'michaeljsmith/vim-indent-object'
    Plug 'scrooloose/nerdTree'
    Plug 'machakann/vim-sandwich'
    Plug 'thaerkh/vim-indentguides'
    Plug 'SirVer/ultisnips'
    Plug 'honza/vim-snippets'
    " tabular plugin is used to format tables
    Plug 'godlygeek/tabular'
    " JSON front matter highlight plugin
    Plug 'elzr/vim-json'
    Plug 'plasticboy/vim-markdown'
    Plug 'vim-pandoc/vim-pandoc-syntax'
    Plug 'vim-pandoc/vim-pandoc'
    Plug 'junegunn/fzf'
    " Initialize plugin system
    Plug 'itchyny/lightline.vim'
    Plug 'jremmen/vim-ripgrep'
    Plug 'cdelledonne/vim-cmake'
    Plug 'sakhnik/nvim-gdb', { 'do': ':!./install.sh' }
    Plug 'neovim/nvim-lspconfig'
    Plug 'hrsh7th/cmp-nvim-lsp'
    Plug 'hrsh7th/cmp-buffer'
    Plug 'hrsh7th/cmp-path'
    Plug 'hrsh7th/cmp-cmdline'
    Plug 'hrsh7th/nvim-cmp'
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}  " We recommend updating the parsers on update
    Plug 'sheerun/vim-polyglot'
    Plug 'kyazdani42/nvim-web-devicons'
    Plug 'folke/trouble.nvim'
    Plug 'folke/lsp-colors.nvim'
    Plug 'kyazdani42/nvim-web-devicons'
call plug#end()
    " colors
    colorscheme dracula
    color dracula
